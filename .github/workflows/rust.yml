name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --all-features

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install llvm-tools-preview
      run: rustup component add llvm-tools-preview
    - name: Download grcov
      run: wget https://github.com/mozilla/grcov/releases/download/v0.8.11/grcov-x86_64-unknown-linux-gnu.tar.bz2
    - name: Decompress grcov
      run: tar xvf grcov-x86_64-unknown-linux-gnu.tar.bz2
    - name: Create coverage output dir
      run: mkdir -p target/coverage
    - name: All features
      run: CARGO_INCREMENTAL=0 RUSTFLAGS='-Cinstrument-coverage' LLVM_PROFILE_FILE='cargo-test-%p-%m.profraw' cargo test --all-features
    - name: No feature
      run: CARGO_INCREMENTAL=0 RUSTFLAGS='-Cinstrument-coverage' LLVM_PROFILE_FILE='cargo-test-%p-%m.profraw' cargo test
    - name: otpauth feature
      run: CARGO_INCREMENTAL=0 RUSTFLAGS='-Cinstrument-coverage' LLVM_PROFILE_FILE='cargo-test-%p-%m.profraw' cargo test --features=otpauth
    - name: gen_secret feature
      run: CARGO_INCREMENTAL=0 RUSTFLAGS='-Cinstrument-coverage' LLVM_PROFILE_FILE='cargo-test-%p-%m.profraw' cargo test --features=gen_secret
    - name: otpauth+gensecret feature
      run: CARGO_INCREMENTAL=0 RUSTFLAGS='-Cinstrument-coverage' LLVM_PROFILE_FILE='cargo-test-%p-%m.profraw' cargo test --features=gen_secret,otpauth
    - name: Check for breaking changes
      uses: obi1kenobi/cargo-semver-checks-action@v2
      with:
        feature-group: all-features
        verbose: true
      continue-on-error: true
    - name: Create coverage file
      run: ./grcov . --binary-path ./target/debug/deps/ -s . -t cobertura --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o target/coverage/cobertura.xml
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v2
      with:
        token: ${{secrets.CODECOV_TOKEN}}

    - name: Archive code coverage results
      uses: actions/upload-artifact@v1
      with:
        name: code-coverage-report
        path: target/coverage/cobertura.xml
